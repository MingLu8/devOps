{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultAccessServicePrinciples": {
            "type": "string",
            "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
            }
        },
        "imageServiceKeyVaultName": {
            "type": "string",
            "defaultValue": "imageservice",
            "metadata": {
                "description": "Specifies the name of the key vault."
            }
        },
        "imageStorageAccountName": {
            "type": "string",
            "defaultValue": "image",
            "metadata": {
                "description": "Specifies the name of the original webp images storage account."
            },
            "maxLength": 16
        },
        "imageStorageConnectionStringSecretName": {
            "type": "string",
            "defaultValue": "image-storage-connection-string",
            "metadata": {
                "description": "Specifies the name of the secret."
            }
        },
        "resizedImageStorageAccountName": {
            "type": "string",
            "defaultValue": "resizedimage",
            "metadata": {
                "description": "Specifies the name of the original webp images storage account."
            },
            "maxLength": 16
        },
        "resizedImageStorageConnectionStringSecretName": {
            "type": "string",
            "defaultValue": "resized-image-storage-connection-string",
            "metadata": {
                "description": "Specifies the name of the secret."
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "Specifies whether the key vault is a standard vault or a premium vault."
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]",
            "metadata": {
                "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
            }
        },
        "prefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix to be used in storage account name.",
                "displayName": "Account name prefix"
            },
            "defaultValue": "my",
            "maxLength": 4
        },
        "postfix": {
            "type": "string",
            "metadata": {
                "description": "Prefix to be used in storage account name.",
                "displayName": "Account name prefix"
            },
            "defaultValue": "dev",
            "maxLength": 4
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The locations that resource groups should be created in.",
                "strongType": "location",
                "displayName": "Deployment location"
            },
            "defaultValue": "East US"
        },
        "accountType": {
            "type": "string",
            "metadata": {
                "description": "The type of storage account.",
                "strongType": "storageSkus",
                "displayName": "Storage account type"
            },
            "defaultValue": "Standard_LRS"
        },
        "accessTier": {
            "type": "string",
            "metadata": {
                "description": "Access tier for block blob data.",
                "displayName": "Access tier"
            },
            "allowedValues": [
                "Hot",
                "Cool",
                "Archive"
            ],
            "defaultValue": "Hot"
        },
        "originalImagesContainerName": {
            "type": "string",
            "metadata": {
                "description": "Container name to store original webp images.",
                "displayName": "Container name"
            },
            "defaultValue": "originals"
        },
        "secretsPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Set",
                "Delete"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "keysPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Create",
                "Update",
                "Delete",
                "Import",
                "Restore",
                "Recover",
                "Backup",
                "Encrypt",
                "Decrypt",
                "Verify",
                "Sign"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "certificatesPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Create",
                "Update",
                "Delete",
                "Import",
                "Restore",
                "Recover",
                "Backup"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        }
    },
    "variables": {
        "servicePrinciples": "[split(parameters('keyVaultAccessServicePrinciples'), ',')]",
        "imageStorageAccountName": "[concat(toLower(parameters('prefix')), toLower(parameters('imageStorageAccountName')), toLower(parameters('postfix')))]",
        "resizedImageStorageAccountName": "[concat(toLower(parameters('prefix')), toLower(parameters('resizedImageStorageAccountName')), toLower(parameters('postfix')))]",
        "imageServiceKeyVaultName": "[concat(toLower(parameters('prefix')), toLower(parameters('imageServiceKeyVaultName')), toLower(parameters('postfix')))]",
        "blobEndPoint": "[concat('https://',variables('imageStorageAccountName'),'.blob.core.windows.net/')]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('imageServiceKeyVaultName')]",
            "apiVersion": "2016-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                ],
                "sku": {
                    "name": "[parameters('skuName')]",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('imageServiceKeyVaultName'), '/add')]",
            "apiVersion": "2018-02-14",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('imageServiceKeyVaultName'))]"
            ],
            "properties": {
                "copy": [
                    {
                        "name": "accessPolicies",
                        "count": "[length(variables('servicePrinciples'))]",
                        "input": {
                            "tenantId": "[parameters('tenantId')]",
                            "objectId": "[trim(variables('servicePrinciples')[copyIndex('accessPolicies')])]",
                            "permissions": {
                                "keys": "[parameters('keysPermissions')]",
                                "secrets": "[parameters('secretsPermissions')]",
                                "certificates": "[parameters('certificatesPermissions')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('imageStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "accessTier": "[parameters('accessTier')]",
                "supportsHttpsTrafficOnly": true
            },
            "sku": {
                "name": "[parameters('accountType')]"
            },
            "kind": "StorageV2",
            "resources": [
                {
                    "type": "blobServices/containers",
                    "name": "[concat('default/', parameters('originalImagesContainerName'))]",
                    "apiVersion": "2019-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('imageStorageAccountName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('imageServiceKeyVaultName'), '/', parameters('imageStorageConnectionStringSecretName'))]",
            "apiVersion": "2016-10-01",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('imageServiceKeyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('imageStorageAccountName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('imageStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('imageStorageAccountName')), '2019-04-01').keys[0].value)]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/locks",
            "apiVersion": "2016-09-01",
            "name": "[concat(variables('imageStorageAccountName'), '/Microsoft.Authorization/storageLock')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('imageStorageAccountName'))]"
            ],
            "properties": {
                "level": "CanNotDelete",
                "notes": "Storage account should not be deleted."
            }
        },
        {
            "name": "[variables('resizedImageStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "accessTier": "[parameters('accessTier')]",
                "supportsHttpsTrafficOnly": true
            },
            "sku": {
                "name": "[parameters('accountType')]"
            },
            "kind": "StorageV2",
            "resources": [
                {
                    "type": "blobServices/containers",
                    "name": "[concat('default/', 'jpgo')]",
                    "apiVersion": "2019-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('resizedImageStorageAccountName'))]"
                    ]
                },
                {
                    "type": "blobServices/containers",
                    "name": "[concat('default/', 'jpga')]",
                    "apiVersion": "2019-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('resizedImageStorageAccountName'))]"
                    ]
                },
                {
                    "type": "blobServices/containers",
                    "name": "[concat('default/', 'jpgt')]",
                    "apiVersion": "2019-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('resizedImageStorageAccountName'))]"
                    ]
                }

            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('imageServiceKeyVaultName'), '/', parameters('resizedImageStorageConnectionStringSecretName'))]",
            "apiVersion": "2016-10-01",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('imageServiceKeyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('resizedImageStorageAccountName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('resizedImageStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('resizedImageStorageAccountName')), '2019-04-01').keys[0].value)]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/locks",
            "apiVersion": "2016-09-01",
            "name": "[concat(variables('resizedImageStorageAccountName'), '/Microsoft.Authorization/storageLock')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('resizedImageStorageAccountName'))]"
            ],
            "properties": {
                "level": "CanNotDelete",
                "notes": "Storage account should not be deleted."
            }
        }
    ],
    "outputs": {
        "blobEndPoint": {
            "type": "string",
            "value": "[variables('blobEndPoint')]"
        },
        "imageStorageConnectionStringSecretName": {
            "type": "string",
            "value": "[concat('https://', variables('imageServiceKeyVaultName'), '.vault.azure.net/secrets/', parameters('imageStorageConnectionStringSecretName'), '/')]"
        },
        "imageStorageAccountName": {
            "type": "string",
            "value": "[variables('imageStorageAccountName')]"
        },
        "imageContainerName": {
            "type": "string",
            "value": "[parameters('originalImagesContainerName')]"
        },
        "resizedImageStorageConnectionStringSecretName": {
            "type": "string",
            "value": "[concat('https://', variables('imageServiceKeyVaultName'), '.vault.azure.net/secrets/', parameters('resizedImageStorageConnectionStringSecretName'), '/')]"
        },
        "resizedImageStorageAccountName": {
            "type": "string",
            "value": "[variables('resizedImageStorageAccountName')]"
        },
        "resizedImageContainerNames": {
            "type": "string",
            "value": "jpgo, jpga, jpgt"
        }
    }
}
