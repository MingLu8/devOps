{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2018-06-01-profile",
    "parameters": {
        "templateBaseUrl": {
            "type": "string"
        },
        "sasToken": {
            "type": "string"
        },
        "functionPackageUri": {
            "type": "string"
        },
        "cdnEndpointName": {
            "type": "string",
            "defaultValue": "[concat('webp-', uniqueString(resourceGroup().id))]"
        },
        "WebPStorageConnectionStringSecretName": {
            "type": "string",
            "defaultValue": "WebPStorageConnectionString"
        },
        "userAppSettings": {
            "type": "object",
            "defaultValue": {
            }
        },
        "appSettings": {
            "type": "object",
            "defaultValue": {
            }
        },
        "applicationInsightsName": {
            "type": "string",
            "defaultValue": "[concat('ai-webp-', uniqueString(resourceGroup().id))]"
        },
        "functionAppName": {
            "type": "string",
            "defaultValue": "[concat('func-app-', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[concat('kv-func-app', uniqueString(resourceGroup().id))]"
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "[concat('stgfuncapp', uniqueString(resourceGroup().id))]"
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "secretsPermissions": {
            "type": "array",
            "defaultValue": [
                "Get",
                "List",
                "Set"
            ],
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        }
    },
    "variables": {
        "createFunctionAppTemplateLink": "[uri(parameters('templateBaseUrl'), concat('arm-templates/common/create-function-app.json?', parameters('sasToken')))]",
        "addSecretTemplatelink": "[uri(parameters('templateBaseUrl'), concat('arm-templates/common/create-key-vault-secret.json?', parameters('sasToken')))]",
        "createCdnTemplatelink": "[uri(parameters('templateBaseUrl'), concat('arm-templates/common/create-cdn-endpoint.json?', parameters('sasToken')))]",
        "createFunctionApp": "createFunctionApp",
        "cdnProfileName": "[concat('webpcdn', uniqueString(resourceGroup().id))]"

    },
    "resources": [
        // {
        //     "type": "Microsoft.Storage/storageAccounts",
        //     "name": "[parameters('storageAccountName')]",
        //     "apiVersion": "2019-04-01",
        //     "location": "[parameters('location')]",
        //     "kind": "StorageV2",
        //     "identity": {
        //         "type": "SystemAssigned"
        //     },
        //     "sku": {
        //         "name": "[parameters('storageAccountType')]"
        //     }
        // },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('createFunctionApp')]",
            "type": "Microsoft.Resources/deployments",
            // "dependsOn": [
            //     "[parameters('storageAccountName')]"
            // ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('createFunctionAppTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "templateBaseUrl": {
                        "value": "[parameters('templateBaseUrl')]"
                    },
                    "sasToken": {
                        "value": "[parameters('sasToken')]"
                    },
                    "functionAppName": {
                        "value": "[parameters('functionAppName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "functionPackageUri": {
                        "value": "[parameters('functionPackageUri')]"
                    },
                    "secretsPermissions": {
                        "value": "[parameters('secretsPermissions')]"
                    },
                    "storageAccountType": {
                        "value": "Standard_LRS"
                    },
                    "userAppSettings": {
                        "value": "[union(parameters('appSettings'), parameters('userAppSettings'))]"
                    },
                    "appSettings": {
                        "value": {
                            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', parameters('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
                            "BlobStorageConnectionString": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), parameters('WebPStorageConnectionStringSecretName')), '2019-09-01', 'Full').properties.secretUriWithVersion, ')')]",
                            "WebPFunctionHostName": "[concat(parameters('functionAppName'), '.azurewebsites.net')]"
                        }
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "addSecretWebPFunctionAccessPolicy",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('createFunctionApp')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('addSecretTemplatelink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "tenantId": {
                        "value": "[parameters('tenantId')]"
                    },
                    "objectId": {
                        "value": "[reference(variables('createFunctionApp')).outputs.functionPrincipleId.value]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "secretsPermissions": {
                        "value": "[parameters('secretsPermissions')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "addCdn",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[variables('createFunctionApp')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('createCdnTemplatelink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cdnEndPointOrigin": {
                        "value": "[concat(parameters('functionAppName'), '.azurewebsites.net')]"
                    },
                    "cdnProfileName": {
                        "value": "[variables('cdnProfileName')]"
                    },
                    "cdnEndpointName": {
                        "value": "[parameters('cdnEndpointName')]"
                    },
                    "functionKey": {
                        "value": "[reference(variables('createFunctionApp')).outputs.functionDefaultKey.value]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "functionDefaultKey": {
            "type": "string",
            "value": "[reference(variables('createFunctionApp')).outputs.functionDefaultKey.value]"
        },
        "functionPrincipleId": {
            "type": "string",
            "value": "[reference(variables('createFunctionApp')).outputs.functionPrincipleId.value]"
        }
    }
}